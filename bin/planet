#!/usr/bin/env ruby

$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'planet/planet'

include GLI

program_desc 'Planet.rb is an awesome feed-aggregator gem that consumes RSS/Atom feeds and outputs them in a format suitable to use with Octopress or Jekyll'

desc 'Parses planet.yml file for blogs and generates their posts in Jekyll compliant format under the _posts directory'
command :generate do |c|

  c.action do |global_options,options,args|
    conf = YAML.load File.open('planet.yml', 'r').read

    @planet = Planet.new(conf.fetch('planet', {}))

    conf['blogs'].each do |blog|
      @planet.blogs << Planet::Blog.new(
        blog['feed'],
        blog['author'],
        blog['image'],
        [],
        @planet
      )
    end

    @planet.aggregate

    @planet.write_posts
  end
end

desc 'Creates basic planet.yml config file'
command :init do |c|
  c.action do |global_options,options,args|
    raise Exception.new('There is already a planet.yml file present') if File.exist? 'planet.yml'

    default = '## Planet.rb default config file, modify it and spawn awesomeness!

planet:
    posts_directory: source/_posts/
    templates_directory: source/_layouts/

blogs:
  - author: "Pablo Astigarraga"
    feed:   "http://blog.poteland.com/atom.xml"
    image:  "http://poteland.com/images/avatars/red_mage.png"

  - author: "Cubox"
    feed:   "http://blog.cuboxlabs.com/atom.xml"
    image:  "http://cuboxlabs.com/img/cubox-humans/could-be-you.png"'

    File.open('planet.yml', 'w') { |f| f.write(default) }

    puts '=> Created default planet.yml'
  end
end

desc 'Creates basic templates on the templates_directory specified in planet.yml'
command :create_templates do |c|
  c.action do |global_options,options,args|
    conf = YAML.load File.open('planet.yml', 'r').read

    templates_dir = conf.fetch('planet').fetch('templates_directory', '_layouts/')

    Dir.mkdir(templates_dir) unless File.exists?(templates_dir)

    author = '<div class="author">
<img src="{{ image }}" style="width: 48px; height: 48px;">
<span style="position: absolute; padding: 12px;">
  <i>Original post by {{ author }} - <a href="{{ link }}">read it from the source</a></i>
</span>
</div>
'
    if !File.exists?(templates_dir + 'author.html')
      File.open(templates_dir + 'author.html', 'w') { |f| f.write(author) }
      puts "=> Created default #{ templates_dir }author.html"
    else
      puts "=> Template #{ templates_dir }author.html already exists, skipping"
    end

    header ='---
title: "{{ title }}"
kind: article
created_at: {{ date }}
author: {{ author }}
layout: post
---
'
    if !File.exists?(templates_dir + 'header.md')
      File.open(templates_dir + 'header.md', 'w') { |f| f.write(header) }
      puts "=> Created default #{ templates_dir }header.md"
    else
      puts "=> Template #{ templates_dir }header.md already exists, skipping"
    end
  end
end

pre do |global,command,options,args|
  if command.name == :generate
    conf = YAML.load File.open('planet.yml', 'r').read

    templates_dir = conf.fetch('planet').fetch('templates_directory', '_layout')

    ## I probably shouldn't do this, but I want the default setup to be simple and smooth.
    Dir.mkdir('source') if templates_dir.split('/').first == 'source' && !File.exists?('source')

    FILES = [templates_dir, templates_dir + 'author.html', templates_dir + 'header.md']

    FILES.each do |file|
      unless File.exists?(file)
        puts "=> Your are missing some files in your templates directory, planet.rb will create them for you - make sure to review them on #{ templates_dir }!"
        response = `planet create_templates`
        puts response
      end
    end
  end

  true
end

post do |global,command,options,args|
  true
end

on_error do |exception|
  true
end

exit GLI.run(ARGV)
