#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility

unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'planet'
require 'ruby-debug'

include GLI

program_desc 'Describe your application here'

desc 'Parses planet.yml file for blogs and generates their posts in Jekyll compliant format under the _posts directory'
command :generate do |c|

  c.action do |global_options,options,args|
    conf = YAML.load File.open('planet.yml', 'r').read

    @planet = Planet.new

    conf['blogs'].each do |blog|
      @planet.blogs << Blog.new(
        blog['feed'],
        blog['author'],
        blog['image'],
        []
      )
    end

    @planet.aggregate

    @planet.write_posts
  end
end

desc 'Creates basic planet.yml file'
command :init do |c|
  c.action do |global_options,options,args|
    raise Exception.new('There is already a planet.yml file present') if File.exist? 'planet.yml'

    default = '
blogs:
  - author: "Pablo Astigarraga"
    feed:   "http://blog.poteland.com/atom.xml"
    image:  "http://poteland.com/images/avatars/red_mage.png"

  - author: "Cubox"
    feed:   "http://blog.cuboxlabs.com/atom.xml"
    image:  "http://cuboxlabs.com/img/cubox-humans/could-be-you.png"'

    File.open('planet.yml', 'w') { |f| f.write(defult) }
  end
end

pre do |global,command,options,args|
  true
end

post do |global,command,options,args|
  true
end

on_error do |exception|
  true
end

exit GLI.run(ARGV)
